<svg viewBox="12 -15 502 200" xmlns="http://www.w3.org/2000/svg">
  <style type="text/css"><![CDATA[
  #gP, #gI, #gB {
    animation: appear 1s ease;
    animation-fill-mode: both;
  }
  @media screen and (-webkit-min-device-pixel-ratio:0) {
    /* this is broken with fucking firefox */
    #mP, #mI, #mB {
      -webkit-animation: appear 1s ease;
      -webkit-animation-fill-mode: both;
    }
  }
  #gP, #mP { }
  #gI, #mI { animation-delay: .2s; }
  #gB, #mB { animation-delay: .4s; }
  @keyframes appear {
    0%   { opacity: 0; y: -200px; }
    100% { opacity: 1; y: 0px; }
  }
]]></style>
  <defs>
    <path id="penguin" d="m 38.73,59.300041 c -0.006,0.092 -0.046,0.159 -0.117,0.203 0.296,-0.09 0.597,0.107 0.861,0.218 0.426,0.179 0.906,0.191 1.358,0.287 0.578,0.123 1.229,0.046 1.82,0.042 0.888,-0.006 1.747,0.129 2.632,0.176 0.402,0.022 0.76,0.184 1.165,0.208 0.431,0.024 0.88,-0.01 1.314,-0.01 0.715,0 1.439,0.029 2.154,0.004 0.735,-0.026 1.723,-0.701 2.406,-0.36 -0.216,-0.257 -0.205,-0.517 -0.533,-0.726 -0.289,-0.182 -0.518,-0.174 -0.637,-0.571 0.23,-0.08 0.46,0.031 0.693,-0.023 0.163,-0.038 0.378,-0.176 0.546,-0.243 0.333,-0.133 0.811,-0.244 1.054,-0.516 -0.401,-0.332 -0.758,-0.701 -1.184,-0.987 -0.521,-0.35 -1.193,-0.401 -1.736,-0.74 -0.609,-0.379 -1.228,-0.608 -1.864,-0.893 -0.383,-0.174 -0.796,-0.124 -1.132,-0.361 -0.291,-0.204 -0.59,-0.522 -0.862,-0.763 0.334,-0.356 0.855,-0.597 1.242,-0.885 0.277,-0.207 0.488,-0.546 0.744,-0.8 0.383,-0.38 0.784,-0.747 1.122,-1.166 1.343,-1.667 2.247,-3.436 3.048,-5.392 0.566,-1.384 0.717,-3.178 0.513,-4.68 -0.065,-0.481 -0.155,-0.431 -0.565,-0.188 -0.32,0.19 -0.613,0.418 -0.926,0.612 -0.523,0.325 -0.927,0.528 -1.33,1.012 0.076,-1.391 0.004,-2.797 0.01,-4.19 10e-4,-0.764 -0.108,-1.392 -0.329,-2.121 -0.2,-0.662 -0.321,-1.388 -0.648,-2.007 -0.227,-0.429 -0.325,-0.341 -0.198,-0.791 0.071,-0.248 0.201,-0.495 0.247,-0.745 0.15,-0.801 -0.009,-1.81 -0.009,-2.626 0,-1.212 -0.029,-2.353 -0.187,-3.547 -0.072,-0.548 -0.093,-1.156 -0.225,-1.691 -0.189,-0.772 -0.477,-1.527 -0.665,-2.303 -0.303,-1.255 -0.818,-2.541 -1.493,-3.647 -0.87,-1.425 -1.67,-2.882 -2.677,-4.212 -0.462,-0.607 -0.765,-1.279 -1.302,-1.834 -0.607,-0.63 -1.268,-1.203 -1.834,-1.872 -0.708,-0.839 -1.545,-1.3189996 -2.49,-1.8159996 -0.188,-0.099 -0.299,-0.196 -0.503,-0.281 -0.21,-0.089 -0.369,-0.109 -0.607,-0.178 -0.528,-0.154 -0.967,-0.54 -1.499,-0.67 -0.251,-0.062 -0.489,-0.046 -0.748,-0.043 -0.126,-0.002 -0.253,-10e-4 -0.379,0.005 -0.177,-0.023 -0.288,-0.124 -0.411,-0.15 -0.237,-0.051 -0.471,0.01 -0.707,-0.031 -0.284,-0.05 -0.472,-0.328 -0.685,-10e-4 0.411,0.057 0.996,-0.287 1.388,-0.432 0.787,-0.293 1.414,-0.749 1.926,-1.408 0.444,-0.574 0.702,-1.057 0.927,-1.737 0.082,-0.248 0.11,-0.516 0.182,-0.749 0.086,-0.275 0.318,-0.38 0.164,-0.725 -0.267,-0.056 -0.352,0.242 -0.529,0.366 -0.227,0.161 -0.48,0.194 -0.707,0.35 -0.281,0.191 -0.481,0.546 -0.742,0.773 -0.369,0.319 -0.768,0.615 -1.138,0.941 -0.477,0.42 -0.858,0.911 -1.307,1.341 -0.264,0.257 -0.381,0.775 -0.753,0.876 -0.114,-0.385 0.028,-0.595 0.109,-0.955 0.13,-0.569 0.192,-1.261 0.233,-1.844 0.043,-0.63 0.184,-1.238 0.182,-1.871 -0.001,-0.582 0.187,-1.095 0.187,-1.685 -0.003,-0.80900004 -0.265,-1.11300004 -1.124,-1.11500004 -0.858,-0.001 -1.402,-0.54099998 -1.729,0.56200005 -0.092,0.31199999 -0.208,0.61999999 -0.288,0.93199999 -0.095,0.371 -0.013,0.752 -0.038,1.131 -0.02,0.338 -0.171,0.597 -0.196,0.933 -0.029,0.433 0.006,0.88 0.006,1.315 0,0.31 -0.003,0.621 0,0.931 0,0.179 0.027,0.39 0.003,0.567 -0.022,0.178 -0.122,0.285 -0.15,0.412 -0.051,0.246 -0.111,0.649 -0.051,0.904 0.085,0.353 0.289,0.47 0.16,0.907 -0.63,-0.285 -1.304,-0.483 -2.012,-0.537 -0.542,-0.042 -1.022,-0.254 -1.556,-0.338 -0.654,-0.104 -1.404,-0.309 -2.058,-0.187 -1.942,0.362 -3.884,0.591 -5.758,1.268 -0.781,0.282 -1.749,0.489 -2.433,0.937 -0.374,0.2429996 -0.755,0.4469996 -1.124,0.7019996 -0.473,0.327 -1.042,0.525 -1.508,0.837 -0.892,0.598 -1.648,1.245 -2.425,2.018 -0.18,0.18 -0.417,0.36 -0.571,0.562 -0.135,0.178 -0.196,0.414 -0.355,0.571 -0.1629996,0.163 -0.3649996,0.195 -0.5299996,0.36 -0.158,0.159 -0.29,0.354 -0.467,0.52 -1.056,0.985 -1.712,2.395 -2.43,3.599 -0.404,0.676 -0.62,1.319 -0.89,2.065 -0.154,0.424 -0.414,0.717 -0.613,1.113 -0.295,0.587 -0.527,1.15 -0.889,1.705 -0.5240004,0.803 -0.6960004,1.774 -1.1180004,2.621 -0.169,0.339 -0.333,0.526 -0.375,0.927 -0.049,0.46 -0.191,0.826 -0.188,1.31 0.003,0.375 0,0.749 0,1.124 0,0.32 0.103,0.832 0.009,1.132 -0.083,0.27 -0.407,0.469 -0.575,0.694 -0.181,0.241 -0.407,0.507 -0.557,0.787 -0.283,0.527 -0.461,1.155 -0.607,1.736 -0.091,0.359 -0.123,0.667 -0.183,1.03 -0.084,0.18 -0.137,0.368 -0.156,0.566 -0.033,0.277 0.052,0.565 0.019,0.842 -0.044,0.38 -0.185,0.699 -0.2,1.086 -0.013,0.306 -0.001,0.621 0.003,0.927 0.004,0.317 -0.069,0.459 -0.144,0.749 -0.08,0.304 -0.042,0.622 -0.043,0.936 0,0.529 -0.101,1.168 -0.009,1.685 0.103,0.588 0.379,1.138 0.525,1.727 0.103,0.415 0.129,0.545 0.375,0.894 0.199,0.283 0.355,0.552 0.598,0.791 0.412,0.405 0.851,0.622 1.319,0.896 0.565,0.33 0.341,0.845 0.371,1.451 0.041,0.814 0.286,1.738 0.515,2.526 0.232,0.8 0.5090004,1.636 0.8470004,2.398 0.2,0.454 0.716,1.009 0.711,1.487 -0.005,0.388 -0.034,0.336 -0.38,0.38 -0.391,0.049 -0.568,0.069 -0.9400004,0.235 -0.609,0.27 -1.109,0.529 -1.684,0.884 -0.528,0.325 -0.973,0.722 -1.498,1.077 -0.46,0.312 -0.705,0.636 -0.908,1.122 0.247,0.353 0.716,0.242 1.094,0.235 0.513,-0.008 0.92,0.187 1.442,0.187 -0.471,0 -1.267,0.068 -1.641,0.412 -0.581,0.534 0.391,0.795 0.752,0.904 0.515,0.155 1.145,0.376 1.694,0.369 0.731,-0.01 1.3880004,0.109 2.1020004,0.177 0.394,0.038 0.724,0.187 1.128,0.202 0.476,0.018 0.982,0.032 1.452,-0.046 1.101,-0.181 2.2239996,-0.133 3.3279996,-0.292 0.811,-0.117 1.546,-0.196 2.292,-0.561 0.451,-0.22 0.971,-0.388 1.462,-0.448 0.004,-0.149 0.173,-0.3 0.182,-0.389 0.022,-0.243 -0.033,-0.265 -0.131,-0.477 0.763,-0.234 1.676,0.152 2.421,0.294 0.544,0.103 1.12,0.039 1.671,0.042 0.836,0.005 1.621,-0.203 2.443,-0.191 0.606,0.008 1.271,0.085 1.868,-0.037 0.441,-0.091 0.812,-0.192 1.275,-0.161 0.415,0.031 0.787,0.187 1.205,0.212 1.23,0.073 2.648,-0.253 3.853,0.031 0.383,0.091 0.559,0.182 0.964,0.104 0.399,-0.076 0.714,-0.147 1.132,-0.145 0.305,10e-4 0.602,0.022 0.896,-0.041 0.165,-0.036 0.174,-0.154 0.415,-0.154 0.243,0 0.25,0.118 0.416,0.154 0.643,0.14 1.393,-0.122 2.028,0.032 0.102,0.012 0.175,0.064 0.22,0.154 0.183,0.04 0.339,0.015 0.524,0.038 0.337,0.041 0.546,0.182 0.9,0.223 0.021,0.104 0.042,0.208 0.064,0.311 0.231,0.067 0.448,-0.011 0.676,0.069 0.214,0.076 0.318,0.308 0.603,0.337"/>
    <path id="lP" d="m 76.794676,83.028658 h 40.357994 c 15.965,0 21.731,-5.123 21.731,-17.23 0,-12.807 -5.766,-17.696 -21.731,-17.696 H 76.794676 Z M 14.262673,8.9856587 H 143.31767 c 44.35,0 60.759,20.9549993 60.759,57.9769993 0,31.899 -15.966,56.580002 -60.315,56.580002 H 76.794677 v 51.69 H 14.262673 Z" />
    <path id="lI" d="M 14.262673,8.9856587 H 76.794282 V 175.23266 H 14.262673 Z" />
    <path id="lB" d="m 73.46978,134.71916 h 53.44 c 12.417,0 16.187,-5.588 16.187,-13.04 0,-7.217 -3.77,-13.038 -16.187,-13.038 h -53.44 z m 0,-63.798001 h 47.23 c 12.64,0 15.523,-4.424 15.523,-10.944 0,-6.287 -2.883,-10.478 -15.523,-10.478 h -47.23 z M 12.26678,8.9851594 h 142.36 c 32.598,0 46.789,14.6699996 46.789,41.4449996 0,14.903 -6.652,27.476 -18.848,32.366 v 0.465 c 20.4,5.589001 27.052,25.613001 27.052,37.953001 0,32.598 -15.521,54.019 -61.866,54.019 h -135.487 z" />
    <use href="#penguin" id="penguin2" transform="scale(-1 1)"/>
    <g id="gPIB">
      <use href="#lP" class="cP" id="gP" />
      <use href="#lI" class="cI" id="gI" x="210" />
      <use href="#lB" class="cB" id="gB" x="300" />
    </g>
    <mask id="mask">
      <use href="#lP" class="cP" id="mP" fill="white" />
      <use href="#lI" class="cI" id="mI" fill="white" x="210" />
      <use href="#lB" class="cB" id="mB" fill="white" x="300" />
      <use href="#penguin" fill="black" id="peng1" y="118" />
      <use href="#penguin2" fill="black" id="peng2" y="118" />
    </mask>
  </defs>
  <script type="text/javascript"><![CDATA[
    const easeOutCubic = function (t) { return (--t)*t*t+1 };
    const offColors = ['4', '5', '6', '7', '8', '9', 'a'];

    function penguin (el, initial, liberty) {
      this.el = el;
      this.initial = initial;
      this.liberty = liberty;
      this.previousTarget = initial;
      this.target = initial;
      this.time = 0;
      this.speed = 1;
    }
    penguin.prototype.setTarget = function () {
      const that = this;
      this.previousTarget = this.target;
      this.target = this.initial + -this.liberty + Math.random() * this.liberty * 2;
      this.time = 0;
      this.speed = 1 + Math.random() * 10;
      setTimeout(function() { that.setTarget() }, 1000 * (2 + Math.random() * 5));
    }
    penguin.prototype.animate = function (t) {
      this.time += t / 30 / 10000 / this.speed;
      const f = easeOutCubic(Math.min(this.time, 1));
      this.el.setAttribute('x', this.target + (this.previousTarget - this.target) * (1 - f));
    }

    const penguins = [
      new penguin(document.getElementById('peng1'), 230, 30),
      new penguin(document.getElementById('peng2'), 375 + 40 / 2, 40)];

    penguins.forEach(p => setTimeout(function() { p.setTarget() }, 1000 * Math.random() * 2));
    function animate(t) {
      penguins.forEach(p => p.animate(t));
      window.requestAnimationFrame(animate);
    }
    window.requestAnimationFrame(animate);

    function blink(sel, wasOff) {
      const off = !wasOff && Math.random() < .8;
      const delay = off ? (30 + 400 * Math.random()) : (1000 * (Math.random() * 2 + 1));
      const offColor = offColors[parseInt(Math.random() * offColors.length)];
      document.getElementById(sel).style.fill = off ? '#' + offColor.repeat(3) : '#fff';
      setTimeout(() => blink(sel, off), delay);
    }
    ['P', 'I', 'B'].forEach(e => setTimeout(() => blink('m' + e), 1000 * Math.random() * 5));
  ]]></script>
  <use href="#gPIB" fill="black" mask="url(#mask)"/>
</svg>